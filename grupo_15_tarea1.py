# -*- coding: utf-8 -*-
"""GRUPO_15_Tarea1.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1J9cVHy5Ugai8JRkcVCJvH_oNb_rnk2Sc

Pregunta 1.
"""

#sea el siguiente número real y entero positivo :
def ingrese_entero_positivo(número) :
  if número%2 == 0:
       veredicto = "Es múltiplo de 2"
  if número%3 == 0:
       veredicto = "Es múltiplo de 3"
  if número%2 == 0 and número%3 == 0 :
       veredicto = "Es múltiplo de 2 y 3"
  else:
      veredicto = "Otro caso"
  return veredicto

ingrese_entero_positivo(6)

"""Pregunta 2."""

for n in range(1,101):
  if n%3==0 and n%5==0:
    print("FizzBuzz")
  elif n % 5== 0:
    print("Buzz")
  elif n%3==0:
    print("Fizz")
  else:
    print(n)

"""Pregunta 3."""

def calcular_descuento(total):
    if total >= 1000:
        descuento = total * 0.20
    elif total >= 500:
        descuento = total * 0.10
    else:
        descuento = 0
    total_final = total - descuento
    return total_final

# Pruebas
compra1 = 1200
compra2 = 750
compra3 = 300

print(f"Total después del descuento para una compra de {compra1}: {calcular_descuento(compra1)}")
print(f"Total después del descuento para una compra de {compra2}: {calcular_descuento(compra2)}")
print(f"Total después del descuento para una compra de {compra3}: {calcular_descuento(compra3)}")



"""Pregunta 4

"""

def clasificar_edad(x) :
  edad = x
  if x < 12:
       output = "Niño"
  elif x >= 12:
       output = "Adolescente"
  elif x < 18:
       output = "Adolescente"
  if x >= 18:
       output = "Joven"
  if x == 24:
       output = "Joven"
  elif x > 24:
       output = "Adulto"
  elif x ==  64:
       output = "Adulto"
  if   x >= 65:
       output = "Adulto Mayor"
  return output

#Clasificación de edades
clasificar_edad(6)

"""Pregunta 5"""

def calcular_craest(Media_personal,media_del_curso,Desviacion_estandar_del_curso):
  Craest=((Media_personal)-(media_del_curso))*10/(Desviacion_estandar_del_curso)+50
  Craest= round(Craest,15)
  return Craest

calcular_craest(14, 15, 3.5)

